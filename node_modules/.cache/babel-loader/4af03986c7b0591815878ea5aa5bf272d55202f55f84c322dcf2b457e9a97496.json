{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { TweetLink } from './tweet-link.js';\nimport s from './tweet-body.module.css';\nexport const TweetBody = _ref => {\n  let {\n    tweet\n  } = _ref;\n  return /*#__PURE__*/_jsx(\"p\", {\n    className: s.root,\n    lang: tweet.lang,\n    dir: \"auto\",\n    children: tweet.entities.map((item, i) => {\n      switch (item.type) {\n        case 'hashtag':\n        case 'mention':\n        case 'url':\n        case 'symbol':\n          return /*#__PURE__*/_jsx(TweetLink, {\n            href: item.href,\n            children: item.text\n          }, i);\n        case 'media':\n          // Media text is currently never displayed, some tweets however might have indices\n          // that do match `display_text_range` so for those cases we ignore the content.\n          return;\n        default:\n          // We use `dangerouslySetInnerHTML` to preserve the text encoding.\n          // https://github.com/vercel-labs/react-tweet/issues/29\n          return /*#__PURE__*/_jsx(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: item.text\n            }\n          }, i);\n      }\n    })\n  });\n};","map":{"version":3,"names":["jsx","_jsx","TweetLink","s","TweetBody","_ref","tweet","className","root","lang","dir","children","entities","map","item","i","type","href","text","dangerouslySetInnerHTML","__html"],"sources":["/Users/fernandoferrarazzo/Documents/nifer/ramaportfolio/portfolio/node_modules/react-tweet/dist/twitter-theme/tweet-body.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { TweetLink } from './tweet-link.js';\nimport s from './tweet-body.module.css';\nexport const TweetBody = ({ tweet })=>/*#__PURE__*/ _jsx(\"p\", {\n        className: s.root,\n        lang: tweet.lang,\n        dir: \"auto\",\n        children: tweet.entities.map((item, i)=>{\n            switch(item.type){\n                case 'hashtag':\n                case 'mention':\n                case 'url':\n                case 'symbol':\n                    return /*#__PURE__*/ _jsx(TweetLink, {\n                        href: item.href,\n                        children: item.text\n                    }, i);\n                case 'media':\n                    // Media text is currently never displayed, some tweets however might have indices\n                    // that do match `display_text_range` so for those cases we ignore the content.\n                    return;\n                default:\n                    // We use `dangerouslySetInnerHTML` to preserve the text encoding.\n                    // https://github.com/vercel-labs/react-tweet/issues/29\n                    return /*#__PURE__*/ _jsx(\"span\", {\n                        dangerouslySetInnerHTML: {\n                            __html: item.text\n                        }\n                    }, i);\n            }\n        })\n    });\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,CAAC,MAAM,yBAAyB;AACvC,OAAO,MAAMC,SAAS,GAAGC,IAAA;EAAA,IAAC;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAAA,OAAG,aAAcJ,IAAI,CAAC,GAAG,EAAE;IACtDM,SAAS,EAAEJ,CAAC,CAACK,IAAI;IACjBC,IAAI,EAAEH,KAAK,CAACG,IAAI;IAChBC,GAAG,EAAE,MAAM;IACXC,QAAQ,EAAEL,KAAK,CAACM,QAAQ,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAG;MACpC,QAAOD,IAAI,CAACE,IAAI;QACZ,KAAK,SAAS;QACd,KAAK,SAAS;QACd,KAAK,KAAK;QACV,KAAK,QAAQ;UACT,OAAO,aAAcf,IAAI,CAACC,SAAS,EAAE;YACjCe,IAAI,EAAEH,IAAI,CAACG,IAAI;YACfN,QAAQ,EAAEG,IAAI,CAACI;UACnB,CAAC,EAAEH,CAAC,CAAC;QACT,KAAK,OAAO;UACR;UACA;UACA;QACJ;UACI;UACA;UACA,OAAO,aAAcd,IAAI,CAAC,MAAM,EAAE;YAC9BkB,uBAAuB,EAAE;cACrBC,MAAM,EAAEN,IAAI,CAACI;YACjB;UACJ,CAAC,EAAEH,CAAC,CAAC;MACb;IACJ,CAAC;EACL,CAAC,CAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}