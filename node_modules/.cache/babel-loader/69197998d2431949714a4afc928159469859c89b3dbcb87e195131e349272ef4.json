{"ast":null,"code":"var _jsxFileName = \"/Users/fernandoferrarazzo/Documents/nifer/portfolio/src/containers/blogs/Blogs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"./Blog.scss\";\nimport BlogCard from \"../../components/blogCard/BlogCard\";\nimport { blogSection } from \"../../portfolio\";\nimport FadeIn from \"../../components/fadeIn/FadeIn\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Blogs() {\n  _s();\n  const {\n    isDark\n  } = useContext(StyleContext);\n  const [mediumBlogs, setMediumBlogs] = useState([]);\n  function setMediumBlogsFunction(array) {\n    setMediumBlogs(array);\n  }\n\n  // Medium API returns blogs' content in HTML format. Below function extracts blogs' text content within paragraph tags\n  function extractTextContent(html) {\n    return typeof html === \"string\" ? html.split(/<\\/p>/i).map(part => part.split(/<p[^>]*>/i).pop()).filter(el => el.trim().length > 0).map(el => el.replace(/<\\/?[^>]+(>|$)/g, \"\").trim()).join(\" \") : NaN;\n  }\n  useEffect(() => {\n    if (blogSection.displayMediumBlogs === \"true\") {\n      const getProfileData = () => {\n        fetch(\"/blogs.json\").then(result => {\n          if (result.ok) {\n            return result.json();\n          }\n        }).then(response => {\n          setMediumBlogsFunction(response.items);\n        }).catch(function (error) {\n          console.error(`${error} (because of this error Blogs section could not be displayed. Blogs section has reverted to default)`);\n          setMediumBlogsFunction(\"Error\");\n          blogSection.displayMediumBlogs = \"false\";\n        });\n      };\n      getProfileData();\n    }\n  }, []);\n  if (!blogSection.display) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(FadeIn, {\n    yOffset: 20,\n    duration: 1,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      id: \"blogs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"blog-header-text\",\n          children: blogSection.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: isDark ? \"dark-mode blog-subtitle\" : \"subTitle blog-subtitle\",\n          children: blogSection.subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-main-div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-text-div\",\n          children: blogSection.displayMediumBlogs !== \"true\" || mediumBlogs === \"Error\" ? blogSection.blogs.map((blog, i) => /*#__PURE__*/_jsxDEV(BlogCard, {\n            isDark: isDark,\n            blog: {\n              url: blog.url,\n              image: blog.image,\n              title: blog.title,\n              description: blog.description\n            }\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this)) : mediumBlogs.map((blog, i) => /*#__PURE__*/_jsxDEV(BlogCard, {\n            isDark: isDark,\n            blog: {\n              url: blog.link,\n              title: blog.title,\n              description: extractTextContent(blog.content)\n            }\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Blogs, \"YG8H31ig8IVD013kwNmkki538dE=\");\n_c = Blogs;\nvar _c;\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","useState","useEffect","useContext","BlogCard","blogSection","FadeIn","StyleContext","jsxDEV","_jsxDEV","Blogs","_s","isDark","mediumBlogs","setMediumBlogs","setMediumBlogsFunction","array","extractTextContent","html","split","map","part","pop","filter","el","trim","length","replace","join","NaN","displayMediumBlogs","getProfileData","fetch","then","result","ok","json","response","items","catch","error","console","display","yOffset","duration","children","className","id","title","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","blogs","blog","i","url","image","description","link","content","_c","$RefreshReg$"],"sources":["/Users/fernandoferrarazzo/Documents/nifer/portfolio/src/containers/blogs/Blogs.js"],"sourcesContent":["import React, {useState, useEffect, useContext} from \"react\";\nimport \"./Blog.scss\";\nimport BlogCard from \"../../components/blogCard/BlogCard\";\nimport {blogSection} from \"../../portfolio\";\nimport FadeIn from \"../../components/fadeIn/FadeIn\";\nimport StyleContext from \"../../contexts/StyleContext\";\n\nexport default function Blogs() {\n  const {isDark} = useContext(StyleContext);\n  const [mediumBlogs, setMediumBlogs] = useState([]);\n\n  function setMediumBlogsFunction(array) {\n    setMediumBlogs(array);\n  }\n\n  // Medium API returns blogs' content in HTML format. Below function extracts blogs' text content within paragraph tags\n  function extractTextContent(html) {\n    return typeof html === \"string\"\n      ? html\n          .split(/<\\/p>/i)\n          .map(part => part.split(/<p[^>]*>/i).pop())\n          .filter(el => el.trim().length > 0)\n          .map(el => el.replace(/<\\/?[^>]+(>|$)/g, \"\").trim())\n          .join(\" \")\n      : NaN;\n  }\n\n  useEffect(() => {\n    if (blogSection.displayMediumBlogs === \"true\") {\n      const getProfileData = () => {\n        fetch(\"/blogs.json\")\n          .then(result => {\n            if (result.ok) {\n              return result.json();\n            }\n          })\n          .then(response => {\n            setMediumBlogsFunction(response.items);\n          })\n          .catch(function (error) {\n            console.error(\n              `${error} (because of this error Blogs section could not be displayed. Blogs section has reverted to default)`\n            );\n            setMediumBlogsFunction(\"Error\");\n            blogSection.displayMediumBlogs = \"false\";\n          });\n      };\n      getProfileData();\n    }\n  }, []);\n\n  if (!blogSection.display) {\n    return null;\n  }\n\n  return (\n    <FadeIn yOffset={20} duration={1}>\n      <div className=\"main\" id=\"blogs\">\n        <div className=\"blog-header\">\n          <h1 className=\"blog-header-text\">{blogSection.title}</h1>\n          <p\n            className={\n              isDark ? \"dark-mode blog-subtitle\" : \"subTitle blog-subtitle\"\n            }\n          >\n            {blogSection.subtitle}\n          </p>\n        </div>\n        <div className=\"blog-main-div\">\n          <div className=\"blog-text-div\">\n            {blogSection.displayMediumBlogs !== \"true\" ||\n            mediumBlogs === \"Error\"\n              ? blogSection.blogs.map((blog, i) => (\n                  <BlogCard\n                    key={i}\n                    isDark={isDark}\n                    blog={{\n                      url: blog.url,\n                      image: blog.image,\n                      title: blog.title,\n                      description: blog.description\n                    }}\n                  />\n                ))\n              : mediumBlogs.map((blog, i) => (\n                  <BlogCard\n                    key={i}\n                    isDark={isDark}\n                    blog={{\n                      url: blog.link,\n                      title: blog.title,\n                      description: extractTextContent(blog.content)\n                    }}\n                  />\n                ))}\n          </div>\n        </div>\n      </div>\n    </FadeIn>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}